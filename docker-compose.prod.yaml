services:
  db:
    image: postgres:16
    container_name: hpc-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: hpc_app
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - hpc-network
    restart: always

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hpc-api
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/hpc_app
      ENVIRONMENT: production
    depends_on:
      - db
    networks:
      - hpc-network
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hpc-frontend
    environment:
      VITE_API_URL: https://hpc-goat.xyz/api
    depends_on:
      - api
    networks:
      - hpc-network
    restart: always

  nginx:
    image: nginx:latest
    container_name: hpc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - frontend_dist:/usr/share/nginx/html:ro  # Serve built frontend files
    depends_on:
      - api
      - frontend
    networks:
      - hpc-network
    restart: always

volumes:
  postgres_data:
  frontend_dist:

networks:
  hpc-network:
    driver: bridge